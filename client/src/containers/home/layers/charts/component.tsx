/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useGLTF } from '@react-three/drei';
import { GLTF, Mesh, MeshStandardMaterial } from 'three';

type GLTFResult = GLTF & {
  nodes: {
    agua: Mesh;
    Socioeconomic: Mesh;
    Management: Mesh;
    Terrain: Mesh;
    Terrain_1: Mesh;
  };
  materials: {
    'Material.001': MeshStandardMaterial;
    socio: MeshStandardMaterial;
    management: MeshStandardMaterial;
    TERRAIN: MeshStandardMaterial;
    Arboles: MeshStandardMaterial;
  };
};

export function Model(props) {
  const { nodes, materials } = useGLTF('/models/city.gltf') as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.agua.geometry}
        material={materials['Material.001']}
        position={[0.006, 0.079, 0.011]}
        scale={[0.959, 1.34, 0.959]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Socioeconomic.geometry}
        material={materials.socio}
        position={[-0.39, 0.271, -0.857]}
        rotation={[0, -0.944, 0]}
        scale={[0.016, 0.012, 0.04]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Management.geometry}
        material={materials.management}
        position={[0.193, 0.183, -0.401]}
        rotation={[0, -0.784, 0]}
        scale={[0.006, 0.035, 0.006]}
      />

      <group position={[0, 0.005, 0]} scale={0.974}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Terrain.geometry}
          material={materials.TERRAIN}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Terrain_1.geometry}
          material={materials.Arboles}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/allunified_final.gltf');

export default Model;
