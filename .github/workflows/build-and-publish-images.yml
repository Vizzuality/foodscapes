name: Build and publish container images to GitHub Container Registry

on:
  push:
    branches:
      - 'main'
      - 'develop'
      - 'staging'
      - 'production'
    paths:
      - 'client/**'
      - 'datasette/**'
      - 'tiler/**'
      - '.github/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  push_tiler_to_registry:
    name: Push tiler container image to registry
    runs-on: ubuntu-22.04
    env:
      REPOSITORY: tiler
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare ids
        shell: bash
        run: |
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
          echo "shortsha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "registry_namespace=$(echo ${{ github.repository_owner }} | tr A-Z a-z)" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Build and push
        uses: docker/build-push-action@v4
        env:
          IMAGE_TAG: ${{ steps.extract_branch.outputs.shortsha }}
          REGISTRY_NAMESPACE: ${{ steps.extract_branch.outputs.registry_namespace }}

        with:
          context: ${{ env.REPOSITORY }}
          push: true
          build-args: |
            TILER_FOODSCAPES_COG_FILENAME=${{ env.TILER_FOODSCAPES_COG_FILENAME }}
            DATA_CORE_COG_SOURCE_URL=${{ env.DATA_CORE_COG_SOURCE_URL }}
            DATA_CORE_COG_CHECKSUM=${{ env.DATA_CORE_COG_CHECKSUM }}
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/foodscapes_${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

  push_client_to_registry:
    name: Push client container image to registry
    runs-on: ubuntu-22.04
    env:
      REPOSITORY: client
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare ids
        shell: bash
        run: |
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
          echo "shortsha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "registry_namespace=$(echo ${{ github.repository_owner }} | tr A-Z a-z)" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Build and push
        uses: docker/build-push-action@v4
        env:
          IMAGE_TAG: ${{ steps.extract_branch.outputs.shortsha }}
          REGISTRY_NAMESPACE: ${{ steps.extract_branch.outputs.registry_namespace }}
        with:
          context: ${{ env.REPOSITORY }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/foodscapes_${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

  push_datasette_to_registry:
    name: Push datasette container image to registry
    runs-on: ubuntu-22.04
    env:
      REPOSITORY: datasette
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare ids
        shell: bash
        run: |
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
          echo "shortsha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "registry_namespace=$(echo ${{ github.repository_owner }} | tr A-Z a-z)" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Build and push
        uses: docker/build-push-action@v4
        env:
          IMAGE_TAG: ${{ steps.extract_branch.outputs.shortsha }}
          REGISTRY_NAMESPACE: ${{ steps.extract_branch.outputs.registry_namespace }}
        with:
          context: ${{ env.REPOSITORY }}
          push: true
          build-args: |
            DATASETTE_SQLITE_DB_FILENAME=${{ env.DATASETTE_SQLITE_DB_FILENAME }}
            DATA_CORE_SQLITE_DB_SOURCE_URL=${{ env.DATA_CORE_SQLITE_DB_SOURCE_URL }}
            DATA_CORE_SQLITE_DB_CHECKSUM=${{ env.DATA_CORE_SQLITE_DB_CHECKSUM }}
            DATASETTE_CORS_ORIGINS=${{ env.DATASETTE_CORS_ORIGINS }}
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/foodscapes_${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
